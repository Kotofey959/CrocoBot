from aiogram import Dispatcher
from aiogram.types import Message

from keyboards.keyboards import *

from products.products import get_products


# –ù–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é
async def process_start_command(message: Message):
    await message.answer(text='–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é', reply_markup=start_keyboard)


# –ë/–£ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
async def show_used(message: Message):
    response = await get_products(None, "Used")
    await message.answer(text=f'–í–æ—Ç —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –∏–∑ –ë/–£ —É—Å—Ç—Ä–æ–π—Å—Ç–≤\n{response}',
                         reply_markup=main_or_contact_keyboard)


# –ù–æ–≤—ã–µ –≤ –Ω–∞–ª–∏—á–∏–∏ –∏–ª–∏ –ø–æ–¥ –∑–∞–∫–∞–∑
async def stock_order(message: Message):
    await message.answer(text='–ü–æ—Å–º–æ—Ç—Ä–∏ —á—Ç–æ –µ—Å—Ç—å –≤ –Ω–∞–ª–∏—á–∏–∏. –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ—à—å —Ç–æ, —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ, –ø–æ–¥ –∑–∞–∫–∞–∑ —Å—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏'
                              ' 4 –¥–Ω—è', reply_markup=choose_keyboard)


# –ù–æ–≤—ã–µ –≤ –Ω–∞–ª–∏—á–∏–∏
async def new_stock(message: Message):
    response = await get_products(None, "New_stock")
    await message.answer(text=f'–í–æ—Ç —á—Ç–æ –µ—Å—Ç—å –≤ –Ω–∞–ª–∏—á–∏–∏ –∏–∑ –Ω–æ–≤—ã—Ö.\n'
                              f'{response}',
                         reply_markup=back_contact_keyboard)


# –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–æ–≤—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –ø–æ–¥ –∑–∞–∫–∞–∑
async def new_order(message: Message):
    await message.answer(text='–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?', reply_markup=new_categories_keyboard)


# –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ iPhone
async def choose_iphone_category(message: Message):
    await message.answer(text='–í—ã–±–∏—Ä–∞–π', reply_markup=iphone_keyboard)


# –¶–µ–Ω–∞ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏ iPhone –ø–æ–¥ –∑–∞–∫–∞–∑
async def iphone_price(message: Message):
    response = await get_products(message.text, "New_order")
    await message.answer(text=f'–í–æ—Ç —Ü–µ–Ω—ã –ø–æ–¥ –∑–∞–∫–∞–∑ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏\n{response}',
                         reply_markup=iphone_contact_keyboard)


# –¶–µ–Ω–∞ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ–¥ –∑–∞–∫–∞–∑
async def other_new_price(message: Message):
    response = await get_products(message.text.strip('üì±üì≤üíª‚åöÔ∏èüéß '), "New_order")
    await message.answer(text=f'–¶–µ–Ω—ã –Ω–∞ —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {message.text}'
                              f'{response}',
                         reply_markup=category_contact_keyboard)


# –°–≤—è–∑—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
async def contact(message: Message):
    await message.answer(text='–ê —Ç—É—Ç –Ω–∏—á–µ–≥–æ –Ω–µ—Ç')


def register_user_handlers(dp: Dispatcher):
    dp.register_message_handler(process_start_command, commands='start', text='‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    dp.register_message_handler(show_used, text='–ë/–£ –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞')
    dp.register_message_handler(stock_order, text=['–ù–æ–≤—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞', '‚¨ÖÔ∏è –ù–∞–∑–∞–¥'])
    dp.register_message_handler(new_stock, text='–í –Ω–∞–ª–∏—á–∏–∏')
    dp.register_message_handler(new_order, text=['–ü–æ–¥ –∑–∞–∫–∞–∑', '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'])
    dp.register_message_handler(choose_iphone_category, text=['üì± iPhone', '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –º–æ–¥–µ–ª–∏'])
    dp.register_message_handler(iphone_price, text=['iPhone 11/Pro/Max', 'iPhone 12/Pro/Max',
                                                    'iPhone 13/Pro/Max', 'iPhone 14/Pro/Max'])
    dp.register_message_handler(other_new_price, text=['üì≤ iPad', 'üíª MacBook', '‚åöÔ∏è Watch',
                                                       'üéß AirPods', '–ü—Ä–æ—á–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞'])
    dp.register_message_handler(contact, text='–ù–∞–ø–∏—Å–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É')
